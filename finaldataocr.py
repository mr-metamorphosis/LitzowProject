# -*- coding: utf-8 -*-
"""FinalDataOCR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HPOv1jqW-dk1YYt7dkJr0dzT1iPTawUj
"""

from google.colab import drive
import os

# Mount Google Drive
drive.mount('/content/drive')

!pip install pdfplumber

import os
import pdfplumber
import pandas as pd

# Folder containing PDF files
PDF_FOLDER = "/content/drive/MyDrive/FinalData/CryptoData"
OUTPUT_EXCEL = "ocr-CryptoData-again.xlsx"

def extract_text_from_pdf(pdf_path):
    """Extract text from a single PDF file using pdfplumber."""
    text = ""
    try:
        with pdfplumber.open(pdf_path) as pdf:
            for page in pdf.pages:
                text += page.extract_text() + "\n" if page.extract_text() else ""
    except Exception as e:
        print(f"Error processing {pdf_path}: {e}")
    return text.strip()

def process_pdfs_in_folder(folder_path):
    """Extract text from all PDFs in a folder and save it in a DataFrame."""
    data = []

    for filename in os.listdir(folder_path):
        if filename.lower().endswith(".pdf"):  # Process only PDFs
            pdf_path = os.path.join(folder_path, filename)
            text = extract_text_from_pdf(pdf_path)
            data.append({"Filename": filename, "Extracted Text": text})

    # Convert extracted data to a Pandas DataFrame
    df = pd.DataFrame(data)
    return df

def save_to_excel(df, output_path):
    """Save the DataFrame to an Excel file."""
    try:
        df.to_excel(output_path, index=False)
        print(f"Saved OCR output to {output_path}")
    except Exception as e:
        print(f"Error saving to Excel: {e}")

if __name__ == "__main__":
    df = process_pdfs_in_folder(PDF_FOLDER)
    if not df.empty:
        save_to_excel(df, OUTPUT_EXCEL)
    else:
        print("No text extracted from PDFs.")